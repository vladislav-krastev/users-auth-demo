#####
##### ENVs with defaults for local deployment (i.e. for use with k8s, docker and docker compose)
#####



APP_NAME="users-auth"
# used as is - no requirements, validations, transformations etc:
HOST_URL=http://localhost:8082

SECRET_KEY=96a1024de0d9d231b4fc249129f5ea9070cae8afd908f99720e5bcacc5f27dd5

PASSWORD_RESET_TOKEN_EXPIRE_MINUTES=30



########################################
#   Authentication - Local
########################################

AUTH_LOCAL=true

AUTH_LOCAL_COOKIE_ENABLED=true
AUTH_LOCAL_COOKIE_NAME=users-auth
AUTH_LOCAL_COOKIE_EXPIRE_MINUTES=30

AUTH_LOCAL_ACCESS_TOKEN_ENABLED=true
AUTH_LOCAL_ACCESS_TOKEN_EXPIRE_MINUTES=30

# TODO: password required chars



########################################
#   Authentication - External
########################################

AUTH_FACEBOOK=false
AUTH_FACEBOOK_CLIENT_ID=
AUTH_FACEBOOK_CLIENT_SECRET=
AUTH_FACEBOOK_ACCESS_TOKEN_EXPIRE_MINUTES=30

AUTH_GITHUB=false
AUTH_GITHUB_CLIENT_ID=
AUTH_GITHUB_CLIENT_SECRET=
AUTH_GITHUB_ACCESS_TOKEN_EXPIRE_MINUTES=30

AUTH_GOOGLE=true
AUTH_GOOGLE_CLIENT_ID=
AUTH_GOOGLE_CLIENT_SECRET=
AUTH_GOOGLE_ACCESS_TOKEN_EXPIRE_MINUTES=30



########################################
#   Sessions
########################################

SESSIONS_PROVIDER=rdbms
# SESSIONS_PROVIDER=memcached

### used with 'SESSIONS_PROVIDER=memcached' on ElastiCache or with 'SESSIONS_PROVIDER=redis' on ElastiCache:
SESSIONS_PROVIDER_AWS_ACCESS_KEY="some-key"
SESSIONS_PROVIDER_AWS_SECRET_KEY="some-key"

### used only with 'SESSIONS_PROVIDER=memcached':
# SESSIONS_PROVIDER_MEMCACHED_SERVER=localhost
SESSIONS_PROVIDER_MEMCACHED_SERVER=sessions-memcached
SESSIONS_PROVIDER_MEMCACHED_PORT=11211

### used only with 'SESSIONS_PROVIDER=rdbms':
# SESSIONS_PROVIDER_RDBMS_SERVER=localhost  # needed for local migrations
# SESSIONS_PROVIDER_RDBMS_SERVER=sessions-rdbms  # when runing "docker compose --profile sessions-rdbms-separate"
# keep everything the same as USERS_PROVIDER_RDBMS_{...} for local deploy with docker compose:
SESSIONS_PROVIDER_RDBMS_SERVER=rdbms
SESSIONS_PROVIDER_RDBMS_PORT=5432
SESSIONS_PROVIDER_RDBMS_DB_NAME=app
SESSIONS_PROVIDER_RDBMS_DB_USER=postgres
SESSIONS_PROVIDER_RDBMS_DB_PASSWORD=pgpassword

SESSIONS_EXPIRED_DELETE=true
SESSIONS_EXPIRED_DELETE_AFTER_MINS=3  # TODO: this config will probably be removed



########################################
#   Users
########################################

USERS_USERNAME_LENGTH_INITIAL_SUFFIX=10
USERS_USERNAME_LENGTH_MIN=10
USERS_USERNAME_LENGTH_MAX=40
USERS_USERNAME_FORBIDDEN=[]

USERS_PASSWORD_LENGTH_MIN=8
USERS_PASSWORD_LENGTH_MAX=40

USERS_PROVIDER=rdbms

### used with 'USERS_PROVIDER=dynamodb' or with 'USERS_PROVIDER=rdbms' on RDS:
USERS_PROVIDER_AWS_ACCESS_KEY="some-key"
USERS_PROVIDER_AWS_SECRET_KEY="some-key"

### used only with 'USERS_PROVIDER=rdbms':
# USERS_PROVIDER_RDBMS_SERVER=localhost  # needed for local migrations
# USERS_PROVIDER_RDBMS_SERVER=users-rdbms  # when runing "docker compose --profile users-rdbms-separate"
# keep everything the same as SESSIONS_PROVIDER_RDBMS_{...} for local deploy with docker compose:
USERS_PROVIDER_RDBMS_SERVER=rdbms
USERS_PROVIDER_RDBMS_PORT=5432
USERS_PROVIDER_RDBMS_DB_NAME=app
USERS_PROVIDER_RDBMS_DB_USER=postgres
USERS_PROVIDER_RDBMS_DB_PASSWORD=pgpassword



########################################
#   gRPC
########################################

GRPC_ENABLED=true
GRPC_PORT=50051
