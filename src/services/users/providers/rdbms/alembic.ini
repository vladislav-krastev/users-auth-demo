[alembic]
# path to the migrations folder:
script_location = migrations

# template used to generate migration file names; The default value is %%(rev)s_%%(slug)s
# Uncomment the line below if you want the files to be prepended with date and time
# see https://alembic.sqlalchemy.org/en/latest/tutorial.html#editing-the-ini-file
# for all available tokens
# file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# sys.path path, will be prepended to sys.path (if present):
prepend_sys_path = ../../../../

# TZ for within the migration file and its filename (leave blank for localtime):
timezone = UTC

# max chars allowed in the "slug" field:
truncate_slug_length = 40

# run ./env.py, regardless of 'autogenerate',
# to enforce the custom revision modifications:
revision_environment = true

# allow .pyc and .pyo files without a source .py file
# to be detected as revisions in the ./versions/ dir:
sourceless = false

# the character used to split "version_locations"
# Valid values are:
# os  ||  :  ||  ;  ||  space  ||  newline
# Use os.pathsep. Default for new projects.
version_path_separator = os

# path to versions/ location
# When using multiple version dirs, initial revisions must be specified with --version-path.
# The path separator used here should be the separator specified by "version_path_separator".
# version_locations = %(here)s/bar:%(here)s/bat:alembic/versions
version_locations = %(here)s/migrations/versions

# search source files recursively in each "version_locations" dir:
recursive_version_locations = false

# the output encoding used when revision files are written from script.py.mako:
output_encoding = utf-8


[post_write_hooks]
# post_write_hooks defines scripts or Python functions that are run
# on newly generated revision scripts.  See the documentation for further
# detail and examples

# format using "black" - use the console_scripts runner, against the "black" entrypoint
# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 79 REVISION_SCRIPT_FILENAME

# lint with attempts to fix using "ruff" - use the exec runner, execute a binary
# hooks = ruff
# ruff.type = exec
# ruff.executable = %(here)s/.venv/bin/ruff
# ruff.options = --fix REVISION_SCRIPT_FILENAME

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
